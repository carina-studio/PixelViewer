<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:abControls="using:CarinaStudio.Controls"
		xmlns:aConverters="using:Avalonia.Data.Converters"
		xmlns:appControls="using:Carina.PixelViewer.Controls"
		xmlns:appConverters="using:Carina.PixelViewer.Data.Converters"
        xmlns:asControls="using:CarinaStudio.AppSuite.Controls"
        xmlns:asMedia="using:CarinaStudio.AppSuite.Media"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="Carina.PixelViewer.Controls.ColorSpaceInfoDialog"
		Classes="Dialog"
        MinHeight="{DynamicResource Double/ColorSpaceInfoDialog.MinHeight}"
        MinWidth="{DynamicResource Double/ColorSpaceInfoDialog.MinWidth}"
        Title="{DynamicResource String/ColorSpaceInfoDialog.Title}"
		Width="{DynamicResource Double/ColorSpaceInfoDialog.Width}">

	<DockPanel>

		<!-- Control buttons -->
		<Border Classes="Dialog_ControlButtonsPanel">
			<StackPanel Classes="Dialog_ControlButtonsPanel">
				<Button Classes="Dialog_ControlButton" Command="{Binding $parent[Window].GenerateResultCommand}" Content="{DynamicResource String/Common.OK}"/>
				<Button Classes="Dialog_ControlButton" Command="{Binding $parent[Window].Close}" Content="{DynamicResource String/Common.Cancel}" IsVisible="{Binding !$parent[Window].IsReadOnly}"/>
			</StackPanel>
		</Border>

		<!-- Content -->
		<Grid ColumnDefinitions="*,*">
			
			<!-- Diagrams -->
			<ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
				<Border Name="diagramBaseContainer" Classes="Dialog_ContentPanel_WithItemsGroups" VerticalAlignment="Top">
					<Border Classes="Dialog_ItemsGroup_Container">
						<StackPanel>
							
							<!-- Reference color space -->
							<asControls:DialogItem>
								<StackPanel Classes="Dialog_Item_Text_Container">
									<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ColorSpaceInfoDialog.ReferenceColorSpace}"/>
									<TextBlock Classes="Dialog_TextBlock_Description" Text="{DynamicResource String/ColorSpaceInfoDialog.ReferenceColorSpace.Description}"/>
								</StackPanel>
								<ComboBox Classes="Dialog_Item_ComboBox" ItemsSource="{Binding $parent[Window].ReferenceColorSpaces}" SelectedItem="{Binding $parent[Window].ReferenceColorSpace, Mode=TwoWay}">
									<ComboBox.ItemTemplate>
										<DataTemplate>
											<Grid ColumnDefinitions="*,Auto">
												<TextBlock Text="{Binding Converter={x:Static appConverters:ColorSpaceToStringConverter.Default}}" VerticalAlignment="Center"/>
												<Border Background="{DynamicResource Brush/SessionControl.ColorSpaceLabel.Background.SystemDefined}" BorderBrush="{DynamicResource Brush/SessionControl.ImageFormatCategoryLabel.Border}" BorderThickness="{DynamicResource Thickness/SessionControl.ImageFormatCategoryLabel.Border}" CornerRadius="{DynamicResource CornerRadius/SessionControl.ImageFormatCategoryLabel}" Grid.Column="1" IsVisible="{Binding IsSystemDefined}" Margin="{DynamicResource Thickness/SessionControl.ImageFormatCategoryLabel.Margin}" Padding="{DynamicResource Thickness/SessionControl.ImageFormatCategoryLabel.Padding}" VerticalAlignment="Center">
													<TextBlock FontSize="{DynamicResource Double/SessionControl.ImageFormatCategoryLabel.FontSize}" FontWeight="Bold" Foreground="{DynamicResource Brush/SessionControl.ImageFormatCategoryLabel.Foreground}" Text="{DynamicResource String/SessionControl.ColorSpace.SystemDefined}"/>
												</Border>
												<Border Background="{DynamicResource Brush/SessionControl.ColorSpaceLabel.Background.Custom}" BorderBrush="{DynamicResource Brush/SessionControl.ImageFormatCategoryLabel.Border}" BorderThickness="{DynamicResource Thickness/SessionControl.ImageFormatCategoryLabel.Border}" CornerRadius="{DynamicResource CornerRadius/SessionControl.ImageFormatCategoryLabel}" Grid.Column="1" IsVisible="{Binding IsUserDefined}" Margin="{DynamicResource Thickness/SessionControl.ImageFormatCategoryLabel.Margin}" Padding="{DynamicResource Thickness/SessionControl.ImageFormatCategoryLabel.Padding}" VerticalAlignment="Center">
													<TextBlock FontSize="{DynamicResource Double/SessionControl.ImageFormatCategoryLabel.FontSize}" FontWeight="Bold" Foreground="{DynamicResource Brush/SessionControl.ImageFormatCategoryLabel.Foreground}" Text="{DynamicResource String/Common.Custom}"/>
												</Border>
											</Grid>
										</DataTemplate>
									</ComboBox.ItemTemplate>
								</ComboBox>
							</asControls:DialogItem>
							<Separator Classes="Dialog_Item_Separator"/>

							<!-- Diagrams -->
							<asControls:DialogItem>
								<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ColorSpaceInfoDialog.Diagram}"/>
								<ComboBox Name="diagramTypeComboBox" Classes="Dialog_Item_ComboBox" SelectedIndex="0">
									<ComboBoxItem Content="{DynamicResource String/ColorSpaceInfoDialog.ChromaticityDiagram}"/>
									<ComboBoxItem Content="{DynamicResource String/ColorSpaceInfoDialog.ToLinearTransferFunctionDiagram}"/>
									<ComboBoxItem Content="{DynamicResource String/ColorSpaceInfoDialog.ToNonLinearTransferFunctionDiagram}"/>
								</ComboBox>
							</asControls:DialogItem>
							<Separator Classes="Dialog_Separator_Small"/>

							<!-- Diagrams -->
							<Panel>

								<!-- xy chromaticity diagram -->
								<Border BorderBrush="{DynamicResource Brush/Control.Border}" BorderThickness="{StaticResource Thickness/Control.Border}" Height="{Binding $self.Bounds.Width}" Opacity="1">
									<Border.Transitions>
										<Transitions>
											<DoubleTransition Property="Opacity" Duration="{StaticResource TimeSpan/Animation.Fast}"/>
										</Transitions>
									</Border.Transitions>
									<appControls:CieChromaticityDiagram Name="chromaticityDiagram"/>
								</Border>

								<!-- To linear transfer function diagram -->
								<Border BorderBrush="{DynamicResource Brush/Control.Border}" BorderThickness="{StaticResource Thickness/Control.Border}" Height="{Binding $self.Bounds.Width}" Opacity="0">
									<Border.Transitions>
										<Transitions>
											<DoubleTransition Property="Opacity" Duration="{StaticResource TimeSpan/Animation.Fast}"/>
										</Transitions>
									</Border.Transitions>
									<appControls:NormalizedTransferFunctionsDiagram Name="toLinearTransferFuncDiagram" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
								</Border>

								<!-- To non-linear transfer function diagram -->
								<Border BorderBrush="{DynamicResource Brush/Control.Border}" BorderThickness="{StaticResource Thickness/Control.Border}" Height="{Binding $self.Bounds.Width}" Opacity="0">
									<Border.Transitions>
										<Transitions>
											<DoubleTransition Property="Opacity" Duration="{StaticResource TimeSpan/Animation.Fast}"/>
										</Transitions>
									</Border.Transitions>
									<appControls:NormalizedTransferFunctionsDiagram Name="toNonLinearTransferFuncDiagram"/>
								</Border>

							</Panel>
							
						</StackPanel>
					</Border>

				</Border>
			</ScrollViewer>

			<!-- color space info -->
			<ScrollViewer Grid.Column="1">
				<StackPanel Classes="Dialog_ContentPanel_WithItemsGroups" Margin="{StaticResource Thickness/ColorSpaceInfoDialog.RightContentPanel.Padding}">

					<!-- Name -->
					<Border Classes="Dialog_ItemsGroup_Container">
						<asControls:DialogItem>
							<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ColorSpaceInfoDialog.Name}"/>
							<TextBox Name="nameTextBox" Classes="Dialog_Item_TextBox" IsReadOnly="{Binding $parent[Window].IsReadOnly}" MaxLength="1024"/>
						</asControls:DialogItem>
					</Border>
					<Separator Classes="Dialog_Separator_Large"/>

					<!-- White point and primaries -->
					<Border Classes="Dialog_ItemsGroup_Header">
						<TextBlock Classes="Dialog_ItemsGroup_Header" Text="{DynamicResource String/ColorSpaceInfoDialog.Primaries}"/>
					</Border>
					<Border Classes="Dialog_ItemsGroup_Container">
						<StackPanel>
							
							<asControls:DialogItem>
								<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ColorSpaceInfoDialog.RedPrimary}"/>
								<TextBox Name="redPrimaryTextBox" Classes="Dialog_Item_TextBox" FontFamily="{x:Static asMedia:BuiltInFonts.RobotoMono}" IsReadOnly="True"/>
							</asControls:DialogItem>
							<Separator Classes="Dialog_Item_Separator"/>
							<asControls:DialogItem>
								<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ColorSpaceInfoDialog.GreenPrimary}"/>
								<TextBox Name="greenPrimaryTextBox" Classes="Dialog_Item_TextBox" FontFamily="{x:Static asMedia:BuiltInFonts.RobotoMono}" IsReadOnly="True"/>
							</asControls:DialogItem>
							<Separator Classes="Dialog_Item_Separator"/>
							<asControls:DialogItem>
								<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ColorSpaceInfoDialog.BluePrimary}"/>
								<TextBox Name="bluePrimaryTextBox" Classes="Dialog_Item_TextBox" FontFamily="{x:Static asMedia:BuiltInFonts.RobotoMono}" IsReadOnly="True"/>
							</asControls:DialogItem>
							<Separator Classes="Dialog_Item_Separator"/>
							<asControls:DialogItem>
								<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ColorSpaceInfoDialog.WhitePoint}"/>
								<TextBox Name="whitePointTextBox" Classes="Dialog_Item_TextBox" FontFamily="{x:Static asMedia:BuiltInFonts.RobotoMono}" IsReadOnly="True"/>
							</asControls:DialogItem>
							<Line Classes="Dialog_Item_Separator_Inner" IsVisible="{Binding #whitePointDescriptionTextBlock.IsVisible}"/>
							<SelectableTextBlock Name="whitePointDescriptionTextBlock" Classes="Dialog_TextBlock_Description"/>
							
						</StackPanel>
					</Border>
					<Separator Classes="Dialog_Separator_Large"/>

					<!-- Other information -->
					<Border Classes="Dialog_ItemsGroup_Header">
						<TextBlock Classes="Dialog_ItemsGroup_Header" Text="{DynamicResource String/ColorSpaceInfoDialog.Other}"/>
					</Border>
					<Border Classes="Dialog_ItemsGroup_Container">
						<StackPanel>
							
							<asControls:DialogItem ItemSize="Small">
								<SelectableTextBlock Name="linearizationDescriptionTextBlock" Classes="Dialog_TextBlock" TextWrapping="Wrap"/>
							</asControls:DialogItem>
							<Line Classes="Dialog_Item_Separator_Inner" IsVisible="{Binding $parent[Window].ColorSpace.Uri, Converter={x:Static aConverters:ObjectConverters.IsNotNull}}"/>
							<abControls:LinkTextBlock Classes="Dialog_LinkTextBlock" HorizontalAlignment="Left" IsVisible="{Binding $parent[Window].ColorSpace.Uri, Converter={x:Static aConverters:ObjectConverters.IsNotNull}}" Text="{DynamicResource String/Common.KnowMoreAbout}" Uri="{Binding $parent[Window].ColorSpace.Uri}"/>
							
						</StackPanel>
					</Border>

				</StackPanel>
			</ScrollViewer>

		</Grid>
		
	</DockPanel>
	
</Window>
